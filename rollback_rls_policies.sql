-- =================================================================
-- ROLLBACK RLS POLICIES - X√ìA T·∫§T C·∫¢ POLICIES ƒê√É T·∫†O TRONG REFACTOR
-- =================================================================

BEGIN;

-- =================================================================
-- B∆Ø·ªöC 1: X√ìA T·∫§T C·∫¢ POLICIES M·ªöI ƒê√É T·∫†O
-- =================================================================

-- 1. X√≥a policies cho b·∫£ng cod_requests
DROP POLICY IF EXISTS "Users can access COD requests based on role" ON public.cod_requests;

-- 2. X√≥a policies cho b·∫£ng street_turn_requests
DROP POLICY IF EXISTS "Users can access street turn requests based on role" ON public.street_turn_requests;

-- 3. X√≥a policies cho b·∫£ng organizations (SELECT)
DROP POLICY IF EXISTS "Users can view organizations based on role" ON public.organizations;

-- 4. X√≥a policies cho b·∫£ng organizations (ALL - management)
DROP POLICY IF EXISTS "Platform Admin can manage organizations" ON public.organizations;

-- 5. X√≥a policies cho b·∫£ng import_containers
DROP POLICY IF EXISTS "Users can access import containers based on role" ON public.import_containers;

-- 6. X√≥a policies cho b·∫£ng export_bookings
DROP POLICY IF EXISTS "Users can access export bookings based on role" ON public.export_bookings;

-- 7. X√≥a policies cho b·∫£ng billing_transactions
DROP POLICY IF EXISTS "Platform Admin can manage all billing transactions" ON public.billing_transactions;
DROP POLICY IF EXISTS "Organizations can view their own billing transactions" ON public.billing_transactions;

-- 8. X√≥a policies cho b·∫£ng profiles
DROP POLICY IF EXISTS "Users can manage profiles based on role" ON public.profiles;

-- =================================================================
-- B∆Ø·ªöC 2: X√ìA HELPER FUNCTIONS ƒê√É T·∫†O
-- =================================================================

-- X√≥a function ki·ªÉm tra Platform Admin
DROP FUNCTION IF EXISTS public.is_platform_admin();

-- X√≥a function ki·ªÉm tra quy·ªÅn approve
DROP FUNCTION IF EXISTS public.can_approve_requests();

-- =================================================================
-- B∆Ø·ªöC 3: KH√îI PH·ª§C POLICIES C≈® (N·∫æU C·∫¶N)
-- =================================================================

-- L∆∞u √Ω: B·∫°n c√≥ th·ªÉ c·∫ßn kh√¥i ph·ª•c l·∫°i policies c≈© n·∫øu c·∫ßn thi·∫øt
-- D∆∞·ªõi ƒë√¢y l√† template, b·∫°n c·∫ßn ƒëi·ªÅu ch·ªânh theo policies c≈© c·ªßa h·ªá th·ªëng

-- V√≠ d·ª• kh√¥i ph·ª•c policy c≈© cho cod_requests:
-- CREATE POLICY "Involved parties can access COD requests" 
-- ON public.cod_requests FOR ALL
-- USING (
--   requesting_org_id = public.get_current_org_id() OR
--   approving_org_id = public.get_current_org_id()
-- );

-- V√≠ d·ª• kh√¥i ph·ª•c policy c≈© cho street_turn_requests:
-- CREATE POLICY "Users can access street turn requests based on organization"
-- ON public.street_turn_requests FOR ALL
-- USING (
--   requesting_org_id = public.get_current_org_id() OR
--   approving_org_id = public.get_current_org_id() OR
--   dropoff_trucking_org_id = public.get_current_org_id()
-- );

-- V√≠ d·ª• kh√¥i ph·ª•c policy c≈© cho organizations:
-- CREATE POLICY "Users can view their own organization"
-- ON public.organizations FOR SELECT
-- USING (id = public.get_current_org_id());

-- V√≠ d·ª• kh√¥i ph·ª•c policy c≈© cho import_containers:
-- CREATE POLICY "Users can access import containers based on organization"
-- ON public.import_containers FOR ALL
-- USING (organization_id = public.get_current_org_id());

-- V√≠ d·ª• kh√¥i ph·ª•c policy c≈© cho export_bookings:
-- CREATE POLICY "Users can access export bookings based on organization"
-- ON public.export_bookings FOR ALL
-- USING (organization_id = public.get_current_org_id());

-- V√≠ d·ª• kh√¥i ph·ª•c policy c≈© cho billing_transactions:
-- CREATE POLICY "Users can view billing transactions based on organization"
-- ON public.billing_transactions FOR SELECT
-- USING (organization_id = public.get_current_org_id());

-- V√≠ d·ª• kh√¥i ph·ª•c policy c≈© cho profiles:
-- CREATE POLICY "Users can update their own profile"
-- ON public.profiles FOR ALL
-- USING (id = auth.uid());

-- =================================================================
-- B∆Ø·ªöC 4: VALIDATION
-- =================================================================

-- Ki·ªÉm tra c√°c policies ƒë√£ ƒë∆∞·ª£c x√≥a
DO $$
DECLARE
    remaining_policies INTEGER;
BEGIN
    SELECT COUNT(*) INTO remaining_policies
    FROM pg_policies 
    WHERE schemaname = 'public' 
    AND policyname LIKE '%based on role%';
    
    IF remaining_policies = 0 THEN
        RAISE NOTICE '‚úÖ ƒê√£ x√≥a th√†nh c√¥ng t·∫•t c·∫£ policies "based on role"';
    ELSE
        RAISE NOTICE '‚ö†Ô∏è  V·∫´n c√≤n % policies "based on role" ch∆∞a ƒë∆∞·ª£c x√≥a', remaining_policies;
    END IF;
END$$;

-- Ki·ªÉm tra helper functions ƒë√£ ƒë∆∞·ª£c x√≥a
DO $$
DECLARE
    remaining_functions INTEGER;
BEGIN
    SELECT COUNT(*) INTO remaining_functions
    FROM pg_proc p
    JOIN pg_namespace n ON p.pronamespace = n.oid
    WHERE n.nspname = 'public' 
    AND p.proname IN ('is_platform_admin', 'can_approve_requests');
    
    IF remaining_functions = 0 THEN
        RAISE NOTICE '‚úÖ ƒê√£ x√≥a th√†nh c√¥ng t·∫•t c·∫£ helper functions';
    ELSE
        RAISE NOTICE '‚ö†Ô∏è  V·∫´n c√≤n % helper functions ch∆∞a ƒë∆∞·ª£c x√≥a', remaining_functions;
    END IF;
END$$;

COMMIT;

-- =================================================================
-- TH√îNG B√ÅO HO√ÄN TH√ÄNH
-- =================================================================

RAISE NOTICE '';
RAISE NOTICE 'üîÑ ROLLBACK RLS POLICIES HO√ÄN TH√ÄNH';
RAISE NOTICE '';
RAISE NOTICE 'üìã ƒê√É X√ìA:';
RAISE NOTICE '- T·∫•t c·∫£ policies "based on role"';
RAISE NOTICE '- Helper functions: is_platform_admin(), can_approve_requests()';
RAISE NOTICE '';
RAISE NOTICE '‚ö†Ô∏è  L∆ØU √ù:';
RAISE NOTICE '- B·∫°n c√≥ th·ªÉ c·∫ßn kh√¥i ph·ª•c l·∫°i policies c≈© n·∫øu c·∫ßn thi·∫øt';
RAISE NOTICE '- Uncomment v√† ch·ªânh s·ª≠a c√°c policies ·ªü B∆Ø·ªöC 3 n·∫øu c·∫ßn';
RAISE NOTICE '- Ki·ªÉm tra l·∫°i t·∫•t c·∫£ ch·ª©c nƒÉng sau khi rollback';
RAISE NOTICE '';
RAISE NOTICE 'üéØ ƒê·ªÉ kh√¥i ph·ª•c ho√†n to√†n, b·∫°n c≈©ng n√™n:';
RAISE NOTICE '1. X√≥a PLATFORM_ADMIN role kh·ªèi ENUM user_role (n·∫øu c·∫ßn)';
RAISE NOTICE '2. Kh√¥i ph·ª•c NOT NULL constraint cho profiles.organization_id';
RAISE NOTICE '3. Rollback c√°c thay ƒë·ªïi trong code (authorization.ts, middleware.ts, etc.)'; 