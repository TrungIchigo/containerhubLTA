-- =================================================================
-- COMPLETE ROLLBACK - HO√ÄN T√ÅC TO√ÄN B·ªò REFACTOR AUTHORIZATION
-- =================================================================
-- Script n√†y s·∫Ω ho√†n t√°c ho√†n to√†n t·∫•t c·∫£ thay ƒë·ªïi ƒë√£ th·ª±c hi·ªán trong refactor

BEGIN;

-- =================================================================
-- B∆Ø·ªöC 1: X√ìA T·∫§T C·∫¢ RLS POLICIES M·ªöI
-- =================================================================

RAISE NOTICE 'B∆∞·ªõc 1: X√≥a t·∫•t c·∫£ RLS policies m·ªõi...';

-- X√≥a policies cho cod_requests
DROP POLICY IF EXISTS "Users can access COD requests based on role" ON public.cod_requests;

-- X√≥a policies cho street_turn_requests
DROP POLICY IF EXISTS "Users can access street turn requests based on role" ON public.street_turn_requests;

-- X√≥a policies cho organizations
DROP POLICY IF EXISTS "Users can view organizations based on role" ON public.organizations;
DROP POLICY IF EXISTS "Platform Admin can manage organizations" ON public.organizations;

-- X√≥a policies cho import_containers
DROP POLICY IF EXISTS "Users can access import containers based on role" ON public.import_containers;

-- X√≥a policies cho export_bookings
DROP POLICY IF EXISTS "Users can access export bookings based on role" ON public.export_bookings;

-- X√≥a policies cho billing_transactions
DROP POLICY IF EXISTS "Platform Admin can manage all billing transactions" ON public.billing_transactions;
DROP POLICY IF EXISTS "Organizations can view their own billing transactions" ON public.billing_transactions;

-- X√≥a policies cho profiles
DROP POLICY IF EXISTS "Users can manage profiles based on role" ON public.profiles;

-- =================================================================
-- B∆Ø·ªöC 2: X√ìA HELPER FUNCTIONS
-- =================================================================

RAISE NOTICE 'B∆∞·ªõc 2: X√≥a helper functions...';

DROP FUNCTION IF EXISTS public.is_platform_admin();
DROP FUNCTION IF EXISTS public.can_approve_requests();

-- =================================================================
-- B∆Ø·ªöC 3: KH√îI PH·ª§C POLICIES C≈®
-- =================================================================

RAISE NOTICE 'B∆∞·ªõc 3: Kh√¥i ph·ª•c policies c≈©...';

-- Kh√¥i ph·ª•c policy c≈© cho cod_requests
CREATE POLICY "Involved parties can access COD requests" 
ON public.cod_requests FOR ALL
USING (
  requesting_org_id = public.get_current_org_id() OR
  approving_org_id = public.get_current_org_id()
);

-- Kh√¥i ph·ª•c policy c≈© cho street_turn_requests
CREATE POLICY "Users can access street turn requests based on organization"
ON public.street_turn_requests FOR ALL
USING (
  requesting_org_id = public.get_current_org_id() OR
  approving_org_id = public.get_current_org_id() OR
  dropoff_trucking_org_id = public.get_current_org_id()
);

-- Kh√¥i ph·ª•c policy c≈© cho organizations
CREATE POLICY "Users can view their own organization"
ON public.organizations FOR SELECT
USING (id = public.get_current_org_id());

-- Kh√¥i ph·ª•c policy c≈© cho import_containers  
CREATE POLICY "Users can access import containers based on organization"
ON public.import_containers FOR ALL
USING (organization_id = public.get_current_org_id());

-- Kh√¥i ph·ª•c policy c≈© cho export_bookings
CREATE POLICY "Users can access export bookings based on organization"
ON public.export_bookings FOR ALL
USING (organization_id = public.get_current_org_id());

-- Kh√¥i ph·ª•c policy c≈© cho billing_transactions
CREATE POLICY "Users can view billing transactions based on organization"
ON public.billing_transactions FOR SELECT
USING (organization_id = public.get_current_org_id());

-- Kh√¥i ph·ª•c policy c≈© cho profiles
CREATE POLICY "Users can update their own profile"
ON public.profiles FOR ALL
USING (id = auth.uid());

-- =================================================================
-- B∆Ø·ªöC 4: KH√îI PH·ª§C DATABASE CONSTRAINTS
-- =================================================================

RAISE NOTICE 'B∆∞·ªõc 4: Kh√¥i ph·ª•c database constraints...';

-- Kh√¥i ph·ª•c NOT NULL constraint cho organization_id
-- L∆∞u √Ω: Ch·ªâ l√†m ƒëi·ªÅu n√†y n·∫øu kh√¥ng c√≥ PLATFORM_ADMIN n√†o trong h·ªá th·ªëng
DO $$
DECLARE
    platform_admin_count INTEGER;
BEGIN
    SELECT COUNT(*) INTO platform_admin_count 
    FROM public.profiles 
    WHERE role = 'PLATFORM_ADMIN';
    
    IF platform_admin_count = 0 THEN
        ALTER TABLE public.profiles
        ALTER COLUMN organization_id SET NOT NULL;
        RAISE NOTICE 'ƒê√£ kh√¥i ph·ª•c NOT NULL constraint cho profiles.organization_id';
    ELSE
        RAISE NOTICE 'C·∫¢NH B√ÅO: V·∫´n c√≤n % t√†i kho·∫£n PLATFORM_ADMIN. Kh√¥ng th·ªÉ kh√¥i ph·ª•c NOT NULL constraint', platform_admin_count;
        RAISE NOTICE 'H√£y x√≥a ho·∫∑c c·∫≠p nh·∫≠t c√°c t√†i kho·∫£n n√†y tr∆∞·ªõc khi kh√¥i ph·ª•c constraint';
    END IF;
END$$;

-- =================================================================
-- B∆Ø·ªöC 5: X√ìA PLATFORM_ADMIN ROLE (T√ôY CH·ªåN)
-- =================================================================

RAISE NOTICE 'B∆∞·ªõc 5: Ki·ªÉm tra PLATFORM_ADMIN role...';

-- Ki·ªÉm tra xem c√≥ t√†i kho·∫£n n√†o ƒëang s·ª≠ d·ª•ng PLATFORM_ADMIN kh√¥ng
DO $$
DECLARE
    platform_admin_count INTEGER;
BEGIN
    SELECT COUNT(*) INTO platform_admin_count 
    FROM public.profiles 
    WHERE role = 'PLATFORM_ADMIN';
    
    IF platform_admin_count = 0 THEN
        RAISE NOTICE 'Kh√¥ng c√≥ t√†i kho·∫£n PLATFORM_ADMIN n√†o. C√≥ th·ªÉ x√≥a role n√†y kh·ªèi ENUM';
        RAISE NOTICE 'ƒê·ªÉ x√≥a role, h√£y ch·∫°y: ALTER TYPE public.user_role DROP VALUE IF EXISTS ''PLATFORM_ADMIN'';';
        RAISE NOTICE 'L∆∞u √Ω: PostgreSQL kh√¥ng h·ªó tr·ª£ DROP VALUE cho ENUM, b·∫°n c√≥ th·ªÉ c·∫ßn recreate ENUM';
    ELSE
        RAISE NOTICE 'C·∫¢NH B√ÅO: V·∫´n c√≤n % t√†i kho·∫£n PLATFORM_ADMIN', platform_admin_count;
        RAISE NOTICE 'H√£y x√≥a ho·∫∑c c·∫≠p nh·∫≠t c√°c t√†i kho·∫£n n√†y tr∆∞·ªõc khi x√≥a role';
    END IF;
END$$;

-- =================================================================
-- B∆Ø·ªöC 6: VALIDATION
-- =================================================================

RAISE NOTICE 'B∆∞·ªõc 6: Validation...';

-- Ki·ªÉm tra policies ƒë√£ ƒë∆∞·ª£c kh√¥i ph·ª•c
DO $$
DECLARE
    old_policies INTEGER;
    new_policies INTEGER;
BEGIN
    SELECT COUNT(*) INTO old_policies
    FROM pg_policies 
    WHERE schemaname = 'public' 
    AND policyname LIKE '%based on organization%';
    
    SELECT COUNT(*) INTO new_policies
    FROM pg_policies 
    WHERE schemaname = 'public' 
    AND policyname LIKE '%based on role%';
    
    RAISE NOTICE 'Policies c≈© (based on organization): %', old_policies;
    RAISE NOTICE 'Policies m·ªõi (based on role): %', new_policies;
    
    IF new_policies = 0 AND old_policies > 0 THEN
        RAISE NOTICE '‚úÖ Rollback policies th√†nh c√¥ng';
    ELSE
        RAISE NOTICE '‚ö†Ô∏è  C√≥ th·ªÉ c√≤n v·∫•n ƒë·ªÅ v·ªõi policies';
    END IF;
END$$;

-- Li·ªát k√™ t·∫•t c·∫£ policies hi·ªán t·∫°i
RAISE NOTICE '';
RAISE NOTICE 'üìã DANH S√ÅCH POLICIES HI·ªÜN T·∫†I:';
DO $$
DECLARE
    policy_record RECORD;
BEGIN
    FOR policy_record IN 
        SELECT schemaname, tablename, policyname, permissive
        FROM pg_policies 
        WHERE schemaname = 'public'
        ORDER BY tablename, policyname
    LOOP
        RAISE NOTICE '- %: %', policy_record.tablename, policy_record.policyname;
    END LOOP;
END$$;

COMMIT;

-- =================================================================
-- TH√îNG B√ÅO HO√ÄN TH√ÄNH
-- =================================================================

RAISE NOTICE '';
RAISE NOTICE 'üîÑ COMPLETE ROLLBACK HO√ÄN TH√ÄNH';
RAISE NOTICE '';
RAISE NOTICE '‚úÖ ƒê√É HO√ÄN T√ÅC:';
RAISE NOTICE '- T·∫•t c·∫£ RLS policies m·ªõi';
RAISE NOTICE '- Helper functions'; 
RAISE NOTICE '- Kh√¥i ph·ª•c policies c≈©';
RAISE NOTICE '- Ki·ªÉm tra constraints';
RAISE NOTICE '';
RAISE NOTICE '‚ö†Ô∏è  VI·ªÜC C·∫¶N L√ÄM TI·∫æP THEO:';
RAISE NOTICE '1. Rollback code changes:';
RAISE NOTICE '   - X√≥a src/lib/authorization.ts';
RAISE NOTICE '   - X√≥a src/hooks/use-permissions.ts';  
RAISE NOTICE '   - Rollback src/middleware.ts';
RAISE NOTICE '   - Rollback src/lib/actions/cod.ts';
RAISE NOTICE '   - Rollback c√°c components ƒë√£ s·ª≠a';
RAISE NOTICE '';
RAISE NOTICE '2. X√≥a c√°c t√†i kho·∫£n PLATFORM_ADMIN (n·∫øu c√≥)';
RAISE NOTICE '3. Test l·∫°i t·∫•t c·∫£ ch·ª©c nƒÉng';
RAISE NOTICE '4. Deploy rollback l√™n production (n·∫øu c·∫ßn)';
RAISE NOTICE '';
RAISE NOTICE 'üéØ H·ªá th·ªëng ƒë√£ ƒë∆∞·ª£c rollback v·ªÅ tr·∫°ng th√°i tr∆∞·ªõc refactor!'; 